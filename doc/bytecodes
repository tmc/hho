Nop []  ->  []
PopA [A]  ->  []
PopC [C]  ->  []
PopV [V]  ->  []
PopR [R]  ->  []
Dup [C:<T>]  ->  [C:<T> C:<T>]
Box [C:<T>]  ->  [V:<T>]
Unbox [V:<T>]  ->  [C:<T>]
BoxR [R:<T>]  ->  [V:<T>]
BoxRNop [R:<T>]  ->  [C:<T>]
UnboxR [R:<T>]  ->  [C:<T>]
UnboxRNop [R:<T>]  ->  [C:<T>]
Null []  ->  [C:Null]
True []  ->  [C:Bool]
False []  ->  [C:Bool]
NullUninit []  ->  [U]
Int []  ->  [C:Int]
Double []  ->  [C:Dbl]
String []  ->  [C:Str]
Array []  ->  [C:Arr]
NewArray []  ->  [C:Arr]
NewArrayReserve []  ->  [C:Arr]
NewPackedArray [C..C]  ->  [C]
NewStructArray [C..C]  ->  [C]
AddElemC [C C C]  ->  [C:Arr]
AddElemV [C C V]  ->  [C:Arr]
AddNewElemC [C C]  ->  [C:Arr]
AddNewElemV [C V]  ->  [C:Arr]
NewCol []  ->  [C:Obj]
ColAddElemC [C C C]  ->  [C:Obj]
ColAddNewElemC [C C]  ->  [C:Obj]
Cns []  ->  [C:Null|Bool|Int|Dbl|Str]
CnsE []  ->  [C:Null|Bool|Int|Dbl|Str]
CnsU []  ->  [C:Null|Bool|Int|Dbl|Str]
ClsCns [A]  ->  [C:Null|Bool|Int|Dbl|Static Str]
ClsCnsD []  ->  [C:Null|Bool|Int|Dbl|Static Str]
File []  ->  [C:Str]
Dir []  ->  [C:Str]
Concat [C C]  ->  [C:Str]
Abs [C] -> [C:Int|Dbl|Bool]
Add [C:Arr C:Arr]  ->  [C:Arr]
Div [C C]  ->  [C:Bool|Int|Dbl]
Mod [C C]  ->  [C:Bool|Int]
Sqrt [C]    ->  [C:Null|Dbl]
Strlen [C] -> [C:Null|Int]
Xor [C C]  ->  [C:Bool]
Not [C]  ->  [C:Bool]
Same [C C]  ->  [C:Bool]
NSame [C C]  ->  [C:Bool]
Eq [C C]  ->  [C:Bool]
Neq [C C]  ->  [C:Bool]
Lt [C C]  ->  [C:Bool]
Lte [C C]  ->  [C:Bool]
Gt [C C]  ->  [C:Bool]
Gte [C C]  ->  [C:Bool]
Shl [C C]  ->  [C:Int]
Shr [C C]  ->  [C:Int]
Floor [C]  ->  [C:Dbl]
Ceil [C]  ->  [C:Dbl]
CastBool [C]  ->  [C:Bool]
CastInt [C]  ->  [C:Int]
CastDouble [C]  ->  [C:Dbl]
CastString [C]  ->  [C:Str]
CastArray [C]  ->  [C:Arr]
CastObject [C]  ->  [C:Obj]
InstanceOf [C C]  ->  [C:Bool]
InstanceOfD [C]  ->  [C:Bool]
Print [C]  ->  [C:Int]
Clone [C]  ->  [C:Obj]
Exit [C]  ->  [C:Null]
Fatal [C]  ->  []
Jmp []  ->  []
JmpNS []  ->  []
JmpZ [C]  ->  []
JmpNZ [C]  ->  []
Switch [C]  ->  []
SSwitch [C]  ->  []
RetC [C]  ->  []
RetV [V]  ->  []
Unwind []  ->  []
Throw [C]  ->  []
CGetL []  ->  [C]
CGetL2 [<F>:<T>]  ->  [C <F>:<T>]
CGetL3 [<F2>:<T2> <F1>:<T1>]  ->  [C <F2>:<T1> <F1>:<T1>]
PushL []  ->  [C]
CGetN [C]  ->  [C]
CGetG [C]  ->  [C]
CGetS [C A]  ->  [C]
VGetL []  ->  [V]
VGetN [C]  ->  [V]
VGetG [C]  ->  [V]
VGetS [C A]  ->  [V]
AGetC [C]  ->  [A]
AGetL []  ->  [A]
IssetC [C]  ->  [C:Bool]
IssetL []  ->  [C:Bool]
IssetN [C]  ->  [C:Bool]
IssetG [C]  ->  [C:Bool]
IssetS [C A]  ->  [C:Bool]
EmptyL []  ->  [C:Bool]
EmptyN [C]  ->  [C:Bool]
EmptyG [C]  ->  [C:Bool]
EmptyS [C A]  ->  [C:Bool]
IsTypeC [C]  ->  [C:Bool]
IsTypeL []  ->  [C:Bool]
SetL [C]  ->  [C]
SetN [C C]  ->  [C]
SetG [C C]  ->  [C]
SetS [C A C]  ->  [C]
SetOpL [C]  ->  [C]
SetOpN [C C]  ->  [C]
SetOpG [C C]  ->  [C]
SetOpS [C A C]  ->  [C]
IncDecL []  ->  [C]
IncDecN [C]  ->  [C]
IncDecG [C]  ->  [C]
IncDecS [C A]  ->  [C]
BindL [V]  ->  [V]
BindN [C V]  ->  [V]
BindG [C V]  ->  [V]
BindS [C A V]  ->  [V]
UnsetL []  ->  []
UnsetN [C]  ->  []
UnsetG [C]  ->  []
FPushFunc [C]  ->  []
FPushFuncD []  ->  []
FPushFuncU []  ->  []
FPushObjMethod [C C]  ->  []
FPushObjMethodD [C]  ->  []
FPushClsMethod [C A]  ->  []
FPushClsMethodF [C A]  ->  []
FPushClsMethodD []  ->  []
FPushCtor [A]  ->  [C]
FPushCtorD []  ->  [C]
DecodeCufIter [C]  ->  []
FPushCufIter []  ->  []
FPushCuf [C]   ->  []
FPushCufF [C]   ->  []
FPushCufSafe [C C] ->  [C C:Bool]
CufSafeArray [C C R] -> [C]
CufSafeReturn [C C R] -> [R]
FPassC [C]  ->  [F]
FPassCW [C]  ->  [F]
FPassCE [C]  ->  [F]
FPassV [V]  ->  [F]
FPassVNop [V]  ->  [F]
FPassR [R]  ->  [F]
FPassL []  ->  [F]
FPassN [C]  ->  [F]
FPassG [C]  ->  [F]
FPassS [C A]  ->  [F]
FCall [F..F]  ->  [R]
FCallArray [F]  ->  [R]
FCallBuiltin [C|V|U..C|V|U]  -> [R]
BaseC [C]  ->  [B]
BaseR [R]  ->  [B]
BaseL []  ->  [B]
BaseLW []  ->  [B]
BaseLD []  ->  [B]
BaseLWD []  ->  [B]
BaseNC [C]  ->  [B]
BaseNL []  ->  [B]
BaseNCW [C]  ->  [B]
BaseNLW []  ->  [B]
BaseNCD [C]  ->  [B]
BaseNLD []  ->  [B]
BaseNCWD [C]  ->  [B]
BaseNLWD []  ->  [B]
BaseGC [C]  ->  [B]
BaseGL []  ->  [B]
BaseGCW [C]  ->  [B]
BaseGLW []  ->  [B]
BaseGCD [C]  ->  [B]
BaseGLD []  ->  [B]
BaseGCWD [C]  ->  [B]
BaseGLWD []  ->  [B]
BaseSC [C A]  ->  [B]
BaseSL [A]  ->  [B]
BaseH []  ->  [B]
ElemC [C B]  ->  [B]
ElemL [B]  ->  [B]
ElemCW [C B]  ->  [B]
ElemLW [B]  ->  [B]
ElemCD [C B]  ->  [B]
ElemLD [B]  ->  [B]
ElemCWD [C B]  ->  [B]
ElemLWD [B]  ->  [B]
ElemCU [C B]  ->  [B]
ElemLU [B]  ->  [B]
NewElem [B]  ->  [B]
PropC [C B]  ->  [B]
PropL [B]  ->  [B]
PropCW [C B]  ->  [B]
PropLW [B]  ->  [B]
PropCD [C B]  ->  [B]
PropLD [B]  ->  [B]
PropCWD [C B]  ->  [B]
PropLWD [B]  ->  [B]
PropCU [C B]  ->  [B]
PropLU [B]  ->  [B]
CGetElemC [C B]  ->  [C]
CGetElemL [B]  ->  [C]
VGetElemC [C B]  ->  [V]
VGetElemL [B]  ->  [V]
IssetElemC [C B]  ->  [C:Bool]
IssetElemL [B]  ->  [C:Bool]
EmptyElemC [C B]  ->  [C]
EmptyElemL [B]  ->  [C]
SetElemC [C C B]  ->  [C]
SetElemL [C B]  ->  [C]
SetOpElemC [C C B]  ->  [C]
SetOpElemL [C B]  ->  [C]
IncDecElemC [C B]  ->  [C]
IncDecElemL [B]  ->  [C]
BindElemC [C V B]  ->  [V]
BindElemL [V B]  ->  [V]
UnsetElemC [C B]  ->  []
UnsetElemL [B]  ->  []
VGetNewElem [B]  ->  [V]
SetNewElem [C B]  ->  [C]
SetOpNewElem [C B]  ->  [C]
IncDecNewElem [B]  ->  [C]
BindNewElem [V B]  ->  [V]
CGetPropC [C B]  ->  [C]
CGetPropL [B]  ->  [C]
VGetPropC [C B]  ->  [V]
VGetPropL [B]  ->  [V]
IssetPropC [C B]  ->  [C:Bool]
IssetPropL [B]  ->  [C:Bool]
EmptyPropC [C B]  ->  [C:Bool]
EmptyPropL [B]  ->  [C:Bool]
SetPropC [C C B]  ->  [C]
SetPropL [C B]  ->  [C]
SetOpPropC [C C B]  ->  [C]
SetOpPropL [C B]  ->  [C]
IncDecPropC [C B]  ->  [C]
IncDecPropL [B]  ->  [C]
BindPropC [C V B]  ->  [V]
BindPropL [V B]  ->  [V]
UnsetPropC [C B]  ->  []
UnsetPropL [B]  ->  []
CGetM [C..C]  ->  [C]
VGetM [C..C]  ->  [V]
FPassM [C..C]  ->  [F]
IssetM [C..C]  ->  [C:Bool]
EmptyM [C..C]  ->  [C:Bool]
SetM [C..C C]  ->  [C]
SetWithRefLM [C..C] -> []
SetWithRefRM [C..C R] -> []
SetOpM [C..C C]  ->  [C]
IncDecM [C..C]  ->  [C]
BindM [C..C V]  ->  [V]
UnsetM [C..C]  ->  []
IterInit [C]  ->  []
IterInitK [C]  ->  []
WIterInit [C]  ->  []
WIterInitK [C]  ->  []
MIterInit [V]  ->  []
MIterInitK [V]  ->  []
IterNext []  ->  []
IterNextK []  ->  []
WIterNext []  ->  []
WIterNextK []  ->  []
MIterNext []  ->  []
MIterNextK []  ->  []
IterFree []  ->  []
MIterFree []  ->  []
CIterFree []  ->  []
IterBreak []  ->  []
Incl [C]  ->  [C]
InclOnce [C]  ->  [C]
Req [C]  ->  [C]
ReqOnce [C]  ->  [C]
ReqDoc [C]  ->  [C]
Eval [C]  ->  [C]
DefFunc []  ->  []
DefCls []  ->  []
NopDefCls []  ->  []
DefCns [C]  ->  [C]
DefTypeAlias []  ->  []
This []  ->  [C:Obj]
BareThis []  ->  [C:Obj|Null]
CheckThis []  ->  []
InitThisLoc []  ->  []
StaticLoc []  ->  [C:Bool]
StaticLocInit [C]  ->  []
Catch []  ->  [C:Obj]
ClassExists [C C]  ->  [C:Bool]
InterfaceExists [C C]  ->  [C:Bool]
TraitExists [C C]  ->  [C:Bool]
VerifyParamType []  ->  []
Self []  ->  [A]
Parent []  ->  [A]
LateBoundCls []  ->  [A]
NativeImpl []  ->  []
IncStat []  ->  []
AKExists [C C] -> [C:Bool]
CreateCl [C|V..C|V]  ->  [C]
Idx [C C C] -> [C]
ArrayIdx [C C C] -> [C]
AssertTL []  ->  []
AssertTStk []  ->  []
AssertObjL []  ->  []
AssertObjStk []  ->  []
PredictTL []  ->  []
PredictTStk []  ->  []
BreakTraceHint []  ->  []
CreateCont []  ->  [C]
ContEnter [C]  ->  []
ContSuspend [C]  ->  []
ContSuspendK [C C]  ->  []
UnpackCont []  ->  [C C:Int]
ContRetC [C]  ->  []
ContCheck []  ->  []
ContRaise []  ->  []
ContValid []  ->  [C:Bool]
ContKey []  ->  [C]
ContCurrent []  ->  [C]
ContStopped []  ->  []
ContHandle [C]  ->  []
AsyncAwait [C]  ->  [C C:Bool]
AsyncESuspend [C:Obj]  ->  [C:Obj]
AsyncWrapResult [C]  ->  [C:Obj]
AsyncWrapException [C:Obj]  ->  [C:Obj]
