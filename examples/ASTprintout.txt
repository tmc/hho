/usr/local/go/bin/go run /Users/pwhite/hho/src/myhho.go
Not implemented: *ast.ForStmt
     0  *ast.File {
     1  .  Package: hello.go:2:1
     2  .  Name: *ast.Ident {
     3  .  .  NamePos: hello.go:2:9
     4  .  .  Name: "main"
     5  .  }
     6  .  Decls: []ast.Decl (len = 1) {
     7  .  .  0: *ast.FuncDecl {
     8  .  .  .  Name: *ast.Ident {
     9  .  .  .  .  NamePos: hello.go:4:6
    10  .  .  .  .  Name: "main"
    11  .  .  .  .  Obj: *ast.Object {
    12  .  .  .  .  .  Kind: func
    13  .  .  .  .  .  Name: "main"
    14  .  .  .  .  .  Decl: *(obj @ 7)
    15  .  .  .  .  }
    16  .  .  .  }
    17  .  .  .  Type: *ast.FuncType {
    18  .  .  .  .  Func: hello.go:4:1
    19  .  .  .  .  Params: *ast.FieldList {
    20  .  .  .  .  .  Opening: hello.go:4:10
    21  .  .  .  .  .  Closing: hello.go:4:11
    22  .  .  .  .  }
    23  .  .  .  }
    24  .  .  .  Body: *ast.BlockStmt {
    25  .  .  .  .  Lbrace: hello.go:4:13
    26  .  .  .  .  List: []ast.Stmt (len = 1) {
    27  .  .  .  .  .  0: *ast.ForStmt {
    28  .  .  .  .  .  .  For: hello.go:5:2
    29  .  .  .  .  .  .  Init: *ast.AssignStmt {
    30  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
    31  .  .  .  .  .  .  .  .  0: *ast.Ident {
    32  .  .  .  .  .  .  .  .  .  NamePos: hello.go:5:6
    33  .  .  .  .  .  .  .  .  .  Name: "i"
    34  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    35  .  .  .  .  .  .  .  .  .  .  Kind: var
    36  .  .  .  .  .  .  .  .  .  .  Name: "i"
    37  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 29)
    38  .  .  .  .  .  .  .  .  .  }
    39  .  .  .  .  .  .  .  .  }
    40  .  .  .  .  .  .  .  }
    41  .  .  .  .  .  .  .  TokPos: hello.go:5:8
    42  .  .  .  .  .  .  .  Tok: :=
    43  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
    44  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
    45  .  .  .  .  .  .  .  .  .  ValuePos: hello.go:5:11
    46  .  .  .  .  .  .  .  .  .  Kind: INT
    47  .  .  .  .  .  .  .  .  .  Value: "0"
    48  .  .  .  .  .  .  .  .  }
    49  .  .  .  .  .  .  .  }
    50  .  .  .  .  .  .  }
    51  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
    52  .  .  .  .  .  .  .  X: *ast.Ident {
    53  .  .  .  .  .  .  .  .  NamePos: hello.go:5:14
    54  .  .  .  .  .  .  .  .  Name: "i"
    55  .  .  .  .  .  .  .  .  Obj: *(obj @ 34)
    56  .  .  .  .  .  .  .  }
    57  .  .  .  .  .  .  .  OpPos: hello.go:5:16
    58  .  .  .  .  .  .  .  Op: <
    59  .  .  .  .  .  .  .  Y: *ast.BasicLit {
    60  .  .  .  .  .  .  .  .  ValuePos: hello.go:5:18
    61  .  .  .  .  .  .  .  .  Kind: INT
    62  .  .  .  .  .  .  .  .  Value: "3"
    63  .  .  .  .  .  .  .  }
    64  .  .  .  .  .  .  }
    65  .  .  .  .  .  .  Post: *ast.IncDecStmt {
    66  .  .  .  .  .  .  .  X: *ast.Ident {
    67  .  .  .  .  .  .  .  .  NamePos: hello.go:5:21
    68  .  .  .  .  .  .  .  .  Name: "i"
    69  .  .  .  .  .  .  .  .  Obj: *(obj @ 34)
    70  .  .  .  .  .  .  .  }
    71  .  .  .  .  .  .  .  TokPos: hello.go:5:22
    72  .  .  .  .  .  .  .  Tok: ++
    73  .  .  .  .  .  .  }
    74  .  .  .  .  .  .  Body: *ast.BlockStmt {
    75  .  .  .  .  .  .  .  Lbrace: hello.go:5:25
    76  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
    77  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {
    78  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
    79  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
    80  .  .  .  .  .  .  .  .  .  .  .  NamePos: hello.go:6:3
    81  .  .  .  .  .  .  .  .  .  .  .  Name: "println"
    82  .  .  .  .  .  .  .  .  .  .  }
    83  .  .  .  .  .  .  .  .  .  .  Lparen: hello.go:6:10
    84  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
    85  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    86  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: hello.go:6:11
    87  .  .  .  .  .  .  .  .  .  .  .  .  Name: "i"
    88  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 34)
    89  .  .  .  .  .  .  .  .  .  .  .  }
    90  .  .  .  .  .  .  .  .  .  .  }
    91  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
    92  .  .  .  .  .  .  .  .  .  .  Rparen: hello.go:6:12
    93  .  .  .  .  .  .  .  .  .  }
    94  .  .  .  .  .  .  .  .  }
    95  .  .  .  .  .  .  .  }
    96  .  .  .  .  .  .  .  Rbrace: hello.go:7:2
    97  .  .  .  .  .  .  }
    98  .  .  .  .  .  }
    99  .  .  .  .  }
   100  .  .  .  .  Rbrace: hello.go:8:1
   101  .  .  .  }
   102  .  .  }
   103  .  }
   104  .  Scope: *ast.Scope {
   105  .  .  Objects: map[string]*ast.Object (len = 1) {
   106  .  .  .  "main": *(obj @ 11)
   107  .  .  }
   108  .  }
   109  .  Unresolved: []*ast.Ident (len = 1) {
   110  .  .  0: *(obj @ 79)
   111  .  }
   112  }